#!/usr/bin/env sh

set -o errexit
set -o nounset

unset `env | grep -vi '^EDITOR=\|^HOME=\|^LANG=\|MXE\|^PATH=' | grep -vi 'PKG_CONFIG\|PROXY\|^PS1=\|^TERM=' | cut -d '=' -f1 | tr '\n' ' '`

#MARIADB_CONNECTOR_C_VERSION='v3.0.8'
MARIADB_CONNECTOR_C_VERSION='a4b107030d149dfe13172a9ae261edafff386b34'

MDCC_HOME=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)
MDCC_MXE=$MDCC_HOME/mxe
MDCC_DOWNLOADS=$MDCC_HOME/downloads
MDCC_SOURCE=$MDCC_HOME/source
MDCC_PATCHES=$MDCC_HOME/patches/$MARIADB_CONNECTOR_C_VERSION
MDCC_BUILD=$MDCC_HOME/build
MDCC_OUT=$MDCC_HOME/binaries

if test ! -d "$MDCC_MXE/usr/bin"; then
    printf "### Installing required libraries\n"
    sudo apt update
    sudo apt install -y \
        autoconf \
        automake \
        autopoint \
        bash \
        bison \
        bzip2 \
        flex \
        g++ \
        g++-multilib \
        gettext \
        git \
        gperf \
        intltool \
        libc6-dev-i386 \
        libgdk-pixbuf2.0-dev \
        libltdl-dev \
        libssl-dev \
        libtool-bin \
        libxml-parser-perl \
        make \
        openssl \
        p7zip-full \
        patch \
        perl \
        pkg-config \
        python \
        ruby \
        scons \
        sed \
        unzip \
        wget \
        xz-utils
    rm -rf "$MDCC_MXE"
    mkdir -p "$MDCC_MXE"
    printf "### Downloading MXE\n"
    git clone https://github.com/mxe/mxe.git "$MDCC_MXE"
    printf "### Building MXE (IT MAY TAKE LOOOOOONG TIME)\n"
    cd "$MDCC_MXE"
    make MXE_TARGETS='i686-w64-mingw32.static x86_64-w64-mingw32.static' cc cmake curl
fi
export PATH="$MDCC_MXE/usr/bin:$PATH"

if test ! -d "$MDCC_DOWNLOADS"; then
    mkdir -p "$MDCC_DOWNLOADS"
fi

if test ! -f "$MDCC_DOWNLOADS/mariadb-connector-c-${MARIADB_CONNECTOR_C_VERSION}.tgz"; then
    printf "### Downloading source code\n"
    curl --location --output "$MDCC_DOWNLOADS/mariadb-connector-c-${MARIADB_CONNECTOR_C_VERSION}.tgz" --retry 3 --silent --show-error "https://github.com/MariaDB/mariadb-connector-c/archive/${MARIADB_CONNECTOR_C_VERSION}.tar.gz"
fi

# Arguments:
#   $1: architecture (i686 or x86_64)
#   $2: output directory name (x86 or x64)
#   $3: plugin 1
#   ...
#   $n: plugin N
mccBuild() {
    MDCC_B_ARC=$1
    shift
    case "$MDCC_B_ARC" in
        i686)
            MDCC_B_OUT=x86
            ;;
        x86_64)
            MDCC_B_OUT=x64
            ;;
        *)
            printf "UNKNOWN ARCHITECTURE: %s\n" "$MDCC_B_ARC"
            return 1
            ;;
    esac
    printf "### Extracting source code\n"
    rm -rf "$MDCC_SOURCE"
    cd "$(dirname "$MDCC_SOURCE")"
    tar -xzf "$MDCC_DOWNLOADS/mariadb-connector-c-${MARIADB_CONNECTOR_C_VERSION}.tgz"
    mv "mariadb-connector-c-${MARIADB_CONNECTOR_C_VERSION}" "$MDCC_SOURCE"
    if test -d "$MDCC_PATCHES"; then
        printf "### Patching source code\n"
        cd "$MDCC_SOURCE"
        MDCC_PATCH_PATTERN="$MDCC_PATCHES/*.patch"
        for MDCC_PATCHFILE in $MDCC_PATCH_PATTERN; do
            printf "> %s\n" "$MDCC_PATCHFILE"
            patch --strip=1 --input="$MDCC_PATCHFILE"
        done
    fi
    printf "### Preparing for %s build\n" "$MDCC_B_OUT"
    rm -rf "$MDCC_BUILD"
    mkdir -p "$MDCC_BUILD"
    mkdir -p "$MDCC_OUT/$MDCC_B_OUT"
    if test ! -f "$MDCC_OUT/LICENSE"; then
        cp "$MDCC_SOURCE/COPYING.LIB" "$MDCC_OUT/LICENSE"
    fi
    cd "$MDCC_BUILD"
    $MDCC_B_ARC-w64-mingw32.static-cmake -DCMAKE_TOOLCHAIN_FILE="$MDCC_MXE/usr/$MDCC_B_ARC-w64-mingw32.static/share/cmake/mxe-conf.cmake" "$MDCC_SOURCE"
    while test $# -gt 0; do
        MDCC_B_PLUGIN=$1
        shift
        printf "### Building plugin %s\n" "$MDCC_B_PLUGIN"
        make "$MDCC_B_PLUGIN"
        printf "### Stripping and copying plugin %s\n" "$MDCC_B_PLUGIN"
        $MDCC_B_ARC-w64-mingw32.static-strip --strip-unneeded "$MDCC_BUILD/$MDCC_B_PLUGIN.dll" -o "$MDCC_OUT/$MDCC_B_OUT/$MDCC_B_PLUGIN.dll"
    done
    rm -rf "$MDCC_SOURCE"
    rm -rf "$MDCC_BUILD"
}
mccBuild i686 auth_gssapi_client caching_sha2_password
mccBuild x86_64 auth_gssapi_client caching_sha2_password
